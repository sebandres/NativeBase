{"version":3,"sources":["../../../src/basic/Checkbox.js"],"names":["CheckBox","variables","checkStyle","borderColor","props","color","checkboxBgColor","backgroundColor","checked","defaultProps","style","getInitialStyle","context","theme","platformStyle","platform","_root","c","prepareRootProps","checkboxTickColor","fontSize","CheckboxFontSize","lineHeight","CheckboxIconSize","contextTypes","object","propTypes","bool","StyledCheckBox"],"mappings":"61BAAA,4B;AACA,qC;AACA;AACA,4D;AACA;AACA,mE;AACA,qD;AACA,8B;AACA,mD;;AAEMA,Q;;;;;AAKYC,S,CAAW;AACzB,MAAO;AACLC,WAAY;AACVC,YAAa,KAAKC,KAAL,CAAWC,KAAX;AACT,KAAKD,KAAL,CAAWC,KADF;AAETJ,UAAUK,eAHJ;AAIVC,gBAAiB,KAAKH,KAAL,CAAWI,OAAX,GAAuB,IAAvB;AACb,KAAKJ,KAAL,CAAWC,KAAX,CAAmB,KAAKD,KAAL,CAAWC,KAA9B,CAAsCJ,UAAUK,eADnC;AAEb,aANM,CADP,CAAP;;;AAUD,C;;AAEgBL,S,CAAW;AAC1B,GAAMQ,cAAe;AACnBC,MAAO,KAAKC,eAAL,CAAqBV,SAArB,EAAgCC,UADpB,CAArB;;;AAIA,MAAO,2BAAa,KAAKE,KAAlB,CAAyBK,YAAzB,CAAP;AACD,C;AACQ;AACP,GAAMR,WAAY,KAAKW,OAAL,CAAaC,KAAb;AACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDZ,SADnC,mBAAlB;;AAGA,GAAMa,eAAgBb,UAAUa,aAAhC;AACA,GAAMC,UAAWd,UAAUc,QAA3B;AACA;AACE;AACE,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EADP;AAEM,KAAKC,gBAAL,CAAsBjB,SAAtB,CAFN;;AAIE;AACE,MAAO;AACLI,MAAOJ,UAAUkB,iBADZ;AAELC,SAAUnB,UAAUoB,gBAFf;AAGLC,WAAYrB,UAAUsB,gBAHjB,CADT;;AAME;AACER,WAAa,KAAb,EAAsBD,gBAAkB,UAAxC;AACI,uBADJ;AAEI,cATR,iDAJF,CADF;;;;;AAmBD,C,wCAlDGd,Q,CACGwB,Y,CAAe,CACpBX,MAAO,oBAAUY,MADG,C;;;AAoDxBzB,SAAS0B,SAAT;AACK,8BAAiBA,SADtB;AAEEhB,MAAO,oBAAUe,MAFnB;AAGEjB,QAAS,oBAAUmB,IAHrB;;;AAMA,GAAMC,gBAAiB;AACrB,qBADqB;AAErB,EAFqB;;AAIrB5B,QAJqB,CAAvB,C;;AAM2BA,Q,CAAlB4B,c","file":"Checkbox.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types'; // ES6\r\nimport { TouchableOpacity, Platform } from \"react-native\";\r\nimport IconNB from \"react-native-vector-icons/Ionicons\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\r\nimport variable from \"../theme/variables/platform\";\r\nimport _ from \"lodash\";\r\nimport computeProps from \"../Utils/computeProps\";\r\n\r\nclass CheckBox extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n\r\n  getInitialStyle(variables) {\r\n    return {\r\n      checkStyle: {\r\n        borderColor: this.props.color\r\n          ? this.props.color\r\n          : variables.checkboxBgColor,\r\n        backgroundColor: this.props.checked === true\r\n          ? this.props.color ? this.props.color : variables.checkboxBgColor\r\n          : \"transparent\"\r\n      }\r\n    };\r\n  }\r\n\r\n  prepareRootProps(variables) {\r\n    const defaultProps = {\r\n      style: this.getInitialStyle(variables).checkStyle\r\n    };\r\n\r\n    return computeProps(this.props, defaultProps);\r\n  }\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n      : variable;\r\n    const platformStyle = variables.platformStyle;\r\n    const platform = variables.platform;\r\n    return (\r\n      <TouchableOpacity\r\n        ref={c => (this._root = c)}\r\n        {...this.prepareRootProps(variables)}\r\n      >\r\n        <IconNB\r\n          style={{\r\n            color: variables.checkboxTickColor,\r\n            fontSize: variables.CheckboxFontSize,\r\n            lineHeight: variables.CheckboxIconSize\r\n          }}\r\n          name={\r\n            platform === \"ios\" && platformStyle !== \"material\"\r\n              ? \"ios-checkmark-outline\"\r\n              : \"md-checkmark\"\r\n          }\r\n        />\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nCheckBox.propTypes = {\r\n  ...TouchableOpacity.propTypes,\r\n  style: PropTypes.object,\r\n  checked: PropTypes.bool\r\n};\r\n\r\nconst StyledCheckBox = connectStyle(\r\n  \"NativeBase.CheckBox\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(CheckBox);\r\n\r\nexport { StyledCheckBox as CheckBox };\r\n"]}