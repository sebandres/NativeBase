{"version":3,"sources":["../../../../src/basic/Tabs/ScrollableTabBar.js"],"names":["ReactNative","require","View","Animated","StyleSheet","ScrollView","Platform","Dimensions","ViewPropTypes","Button","WINDOW_WIDTH","get","width","ScrollableTabBar","contextTypes","theme","object","scrollOffset","activeTextColor","inactiveTextColor","backgroundColor","style","tabStyle","tabsContainerStyle","underlineStyle","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","tabs","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","children","undefined","textColor","fontWeight","random","event","nativeEvent","layout","height","_value","variables","context","tabUnderlineStyle","topTabBarActiveBorderColor","bottom","dynamicTabUnderline","styles","container","onContainerLayout","scrollView","onScroll","onTabContainerLayout","map","activeTab","renderTab","goToPage","measureTab","bind","nextProps","isEqual","setState","e","propTypes","func","number","array","string","StyledTab","mapPropsToStyleNames","ScrollableTab","create","tab","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"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","file":"ScrollableTabBar.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nconst ReactNative = require(\"react-native\");\r\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\r\nimport variable from \"./../../theme/variables/platform\";\r\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\r\nimport _ from \"lodash\";\r\nconst {\r\n  View,\r\n  Animated,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Platform,\r\n  Dimensions,\r\n  ViewPropTypes\r\n} = ReactNative;\r\nconst Button = require(\"./Button\");\r\n\r\nconst WINDOW_WIDTH = Dimensions.get(\"window\").width;\r\n\r\nclass ScrollableTabBar extends Component {\r\n  contextTypes = {\r\n    theme: PropTypes.object\r\n  }\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      scrollOffset: 52,\r\n      activeTextColor: \"navy\",\r\n      inactiveTextColor: \"black\",\r\n      backgroundColor: null,\r\n      style: {},\r\n      tabStyle: {},\r\n      tabsContainerStyle: {},\r\n      underlineStyle: {}\r\n    };\r\n  }\r\n\r\n  getInitialState() {\r\n    this._tabsMeasurements = [];\r\n    return {\r\n      _leftTabUnderline: new Animated.Value(0),\r\n      _widthTabUnderline: new Animated.Value(0),\r\n      _containerWidth: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.scrollValue.addListener(this.updateView);\r\n  }\r\n\r\n  updateView(offset) {\r\n    const position = Math.floor(offset.value);\r\n    const pageOffset = offset.value % 1;\r\n    const tabCount = this.props.tabs.length;\r\n    const lastTabPosition = tabCount - 1;\r\n\r\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.necessarilyMeasurementsCompleted(\r\n        position,\r\n        position === lastTabPosition\r\n      )\r\n    ) {\r\n      this.updateTabPanel(position, pageOffset);\r\n      this.updateTabUnderline(position, pageOffset, tabCount);\r\n    }\r\n  }\r\n\r\n  necessarilyMeasurementsCompleted(position, isLastTab) {\r\n    return (\r\n      this._tabsMeasurements[position] &&\r\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\r\n      this._tabContainerMeasurements &&\r\n      this._containerMeasurements\r\n    );\r\n  }\r\n\r\n  updateTabPanel(position, pageOffset) {\r\n    const containerWidth = this._containerMeasurements.width;\r\n    const tabWidth = this._tabsMeasurements[position].width;\r\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\r\n    const nextTabWidth =\r\n      (nextTabMeasurements && nextTabMeasurements.width) || 0;\r\n    const tabOffset = this._tabsMeasurements[position].left;\r\n    const absolutePageOffset = pageOffset * tabWidth;\r\n    let newScrollX = tabOffset + absolutePageOffset;\r\n\r\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\r\n    newScrollX -=\r\n      (containerWidth -\r\n        (1 - pageOffset) * tabWidth -\r\n        pageOffset * nextTabWidth) /\r\n      2;\r\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\r\n\r\n    if (Platform.OS === \"android\") {\r\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\r\n    } else {\r\n      const rightBoundScroll =\r\n        this._tabContainerMeasurements.width -\r\n        this._containerMeasurements.width;\r\n      newScrollX = newScrollX > rightBoundScroll\r\n        ? rightBoundScroll\r\n        : newScrollX;\r\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\r\n    }\r\n  }\r\n\r\n  updateTabUnderline(position, pageOffset, tabCount) {\r\n    const lineLeft = this._tabsMeasurements[position].left;\r\n    const lineRight = this._tabsMeasurements[position].right;\r\n\r\n    if (position < tabCount - 1) {\r\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\r\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\r\n\r\n      const newLineLeft =\r\n        pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\r\n      const newLineRight =\r\n        pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\r\n\r\n      this.state._leftTabUnderline.setValue(newLineLeft);\r\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\r\n    } else {\r\n      this.state._leftTabUnderline.setValue(lineLeft);\r\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\r\n    }\r\n  }\r\n\r\n  renderTab(\r\n    name,\r\n    page,\r\n    isTabActive,\r\n    onPressHandler,\r\n    onLayoutHandler,\r\n    tabStyle,\r\n    activeTabStyle,\r\n    textStyle,\r\n    activeTextStyle,\r\n    tabHeaderStyle\r\n  ) {\r\n    const headerContent = typeof name !== \"string\"\r\n      ? name.props.children\r\n      : undefined;\r\n    const { activeTextColor, inactiveTextColor } = this.props;\r\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\r\n    const fontWeight = isTabActive ? \"bold\" : \"normal\";\r\n\r\n    if (typeof name === \"string\") {\r\n      return (\r\n        <Button\r\n          key={`${name}_${page}`}\r\n          onPress={() => onPressHandler(page)}\r\n          onLayout={onLayoutHandler}\r\n        >\r\n          <TabHeading\r\n            scrollable\r\n            style={isTabActive ? activeTabStyle : tabStyle}\r\n            active={isTabActive}\r\n          >\r\n            <Text style={isTabActive ? activeTextStyle : textStyle}>\r\n              {name}\r\n            </Text>\r\n          </TabHeading>\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button key={_.random(1.2, 5.2)} onPress={() => onPressHandler(page)}>\r\n          <TabHeading scrollable style={tabHeaderStyle} active={isTabActive}>\r\n            {headerContent}\r\n          </TabHeading>\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  measureTab(page, event) {\r\n    const { x, width, height } = event.nativeEvent.layout;\r\n    this._tabsMeasurements[page] = { left: x, right: x + width, width, height };\r\n    this.updateView({ value: this.props.scrollValue._value });\r\n  }\r\n\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n      : variable;\r\n    const tabUnderlineStyle = {\r\n      position: \"absolute\",\r\n      height: 4,\r\n      backgroundColor: variables.topTabBarActiveBorderColor,\r\n      bottom: 0\r\n    };\r\n\r\n    const dynamicTabUnderline = {\r\n      left: this.state._leftTabUnderline,\r\n      width: this.state._widthTabUnderline\r\n    };\r\n\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.container,\r\n          { backgroundColor: this.props.backgroundColor },\r\n          this.props.style\r\n        ]}\r\n        onLayout={this.onContainerLayout}\r\n      >\r\n        <ScrollView\r\n          automaticallyAdjustContentInsets={false}\r\n          ref={scrollView => {\r\n            this._scrollView = scrollView;\r\n          }}\r\n          horizontal={true}\r\n          showsHorizontalScrollIndicator={false}\r\n          showsVerticalScrollIndicator={false}\r\n          directionalLockEnabled={true}\r\n          onScroll={this.props.onScroll}\r\n          bounces={false}\r\n          scrollsToTop={false}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.tabs,\r\n              { width: this.state._containerWidth },\r\n              this.props.tabsContainerStyle\r\n            ]}\r\n            ref={\"tabContainer\"}\r\n            onLayout={this.onTabContainerLayout}\r\n          >\r\n            {this.props.tabs.map((name, page) => {\r\n              const isTabActive = this.props.activeTab === page;\r\n              const renderTab = this.props.renderTab || this.renderTab;\r\n              return renderTab(\r\n                name,\r\n                page,\r\n                isTabActive,\r\n                this.props.goToPage,\r\n                this.measureTab.bind(this, page),\r\n                this.props.tabStyle[page],\r\n                this.props.activeTabStyle[page],\r\n                this.props.textStyle[page],\r\n                this.props.activeTextStyle[page],\r\n                this.props.tabHeaderStyle[page]\r\n              );\r\n            })}\r\n            <Animated.View\r\n              style={[\r\n                tabUnderlineStyle,\r\n                dynamicTabUnderline,\r\n                this.props.underlineStyle\r\n              ]}\r\n            />\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // If the tabs change, force the width of the tabs container to be recalculated\r\n    if (\r\n      !_.isEqual(this.props.tabs, nextProps.tabs) &&\r\n      this.state._containerWidth\r\n    ) {\r\n      this.setState({ _containerWidth: null });\r\n    }\r\n  }\r\n\r\n  onTabContainerLayout(e) {\r\n    this._tabContainerMeasurements = e.nativeEvent.layout;\r\n    let width = this._tabContainerMeasurements.width;\r\n    if (width < WINDOW_WIDTH) {\r\n      width = WINDOW_WIDTH;\r\n    }\r\n    this.setState({ _containerWidth: width });\r\n    this.updateView({ value: this.props.scrollValue._value });\r\n  }\r\n\r\n  onContainerLayout(e) {\r\n    this._containerMeasurements = e.nativeEvent.layout;\r\n    this.updateView({ value: this.props.scrollValue._value });\r\n  }\r\n}\r\n\r\nScrollableTabBar.propTypes = {\r\n  goToPage: PropTypes.func,\r\n  activeTab: PropTypes.number,\r\n  tabs: PropTypes.array,\r\n  backgroundColor: PropTypes.string,\r\n  activeTextColor: PropTypes.string,\r\n  inactiveTextColor: PropTypes.string,\r\n  scrollOffset: PropTypes.number,\r\n  style: ViewPropTypes.style,\r\n  tabStyle: ViewPropTypes.style,\r\n  tabsContainerStyle: ViewPropTypes.style,\r\n  renderTab: PropTypes.func,\r\n  underlineStyle: ViewPropTypes.style,\r\n  onScroll: PropTypes.func\r\n}\r\n\r\n\r\n// module.exports = ScrollableTabBar;\r\nconst StyledTab = connectStyle(\r\n  \"NativeBase.ScrollableTab\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(ScrollableTabBar);\r\nexport { StyledTab as ScrollableTab };\r\nconst styles = StyleSheet.create({\r\n  tab: {\r\n    height: 49,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingLeft: 20,\r\n    paddingRight: 20\r\n  },\r\n  container: {\r\n    height: 50,\r\n    borderWidth: 1,\r\n    borderTopWidth: 0,\r\n    borderLeftWidth: 0,\r\n    borderRightWidth: 0,\r\n    borderColor: \"#ccc\"\r\n  },\r\n  tabs: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\"\r\n  }\r\n});\r\n"]}