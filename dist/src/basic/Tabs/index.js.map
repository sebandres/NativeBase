{"version":3,"sources":["../../../../src/basic/Tabs/index.js"],"names":["ReactNative","require","Dimensions","View","Animated","ScrollView","StyleSheet","InteractionManager","Platform","ViewPropTypes","TimerMixin","SceneComponent","DefaultTabBar","ScrollableTabBar","ScrollableTabView","mixins","statics","tabBarPosition","initialPage","page","onChangeTab","onScroll","contentProps","scrollWithoutAnimation","locked","prerenderingSiblingsNumber","currentPage","props","scrollValue","Value","containerWidth","get","width","sceneKeys","newSceneKeys","scrollFn","scrollView","OS","x","state","scrollTo","animated","setTimeout","runAfterInteractions","children","updateSceneKeys","goToPage","pageNumber","offset","y","callback","_onChangeTab","bind","renderTabBar","cloneElement","newKeys","previousKeys","setState","_children","forEach","child","idx","key","_makeSceneKey","_keyExists","_shouldRenderSceneKey","push","currentPageKey","numOfSibling","find","sceneKey","heading","scenes","_composeScenes","offsetX","e","nativeEvent","contentOffset","_updateScrollValue","_onMomentumScrollBeginAndEnd","map","Math","round","_updateSelectedPage","nextPage","localNextPage","position","prevPage","i","ref","from","value","setValue","layout","requestAnimationFrame","Children","overlayTabs","tabBarProps","tabs","tabStyle","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","undefined","activeTab","tabBarBackgroundColor","backgroundColor","tabBarActiveTextColor","activeTextColor","tabBarInactiveTextColor","inactiveTextColor","tabBarTextStyle","tabBarUnderlineStyle","underlineStyle","style","left","right","styles","container","_handleLayout","renderScrollableContent","propTypes","oneOf","number","func","any","object","bool","create","flex","scrollableContentAndroid"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'; // ES6\r\nconst ReactNative = require(\"react-native\");\r\nconst {\r\n  Dimensions,\r\n  View,\r\n  Animated,\r\n  ScrollView,\r\n  StyleSheet,\r\n  InteractionManager,\r\n  Platform,\r\n  ViewPropTypes\r\n} = ReactNative;\r\nconst TimerMixin = require(\"react-timer-mixin\");\r\nimport _ from \"lodash\";\r\n\r\nconst SceneComponent = require(\"./SceneComponent\");\r\nconst { DefaultTabBar } = require(\"./DefaultTabBar\");\r\nconst { ScrollableTabBar } = require(\"./ScrollableTabBar\");\r\n\r\nclass ScrollableTabView extends Component {\r\n  mixins = [TimerMixin]\r\n  statics = {\r\n    DefaultTabBar,\r\n    ScrollableTabBar\r\n  }\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      tabBarPosition: \"top\",\r\n      initialPage: 0,\r\n      page: -1,\r\n      onChangeTab: () => { },\r\n      onScroll: () => { },\r\n      contentProps: {},\r\n      scrollWithoutAnimation: false,\r\n      locked: false,\r\n      prerenderingSiblingsNumber: 0\r\n    };\r\n  }\r\n\r\n  getInitialState() {\r\n    return {\r\n      currentPage: this.props.initialPage,\r\n      scrollValue: new Animated.Value(this.props.initialPage),\r\n      containerWidth: Dimensions.get(\"window\").width,\r\n      sceneKeys: this.newSceneKeys({ currentPage: this.props.initialPage })\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const scrollFn = () => {\r\n      if (this.scrollView && Platform.OS === \"android\") {\r\n        const x = this.props.initialPage * this.state.containerWidth;\r\n        this.scrollView.scrollTo({ x, animated: false });\r\n      }\r\n    };\r\n    this.setTimeout(() => {\r\n      InteractionManager.runAfterInteractions(scrollFn);\r\n    }, 0);\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props.children !== this.props.children) {\r\n      this.updateSceneKeys({\r\n        page: this.state.currentPage,\r\n        children: props.children\r\n      });\r\n    }\r\n\r\n    if (props.page >= 0 && props.page !== this.state.currentPage) {\r\n      this.goToPage(props.page);\r\n    }\r\n  }\r\n\r\n  goToPage(pageNumber) {\r\n    const offset = pageNumber * this.state.containerWidth;\r\n    if (this.scrollView) {\r\n      this.scrollView.scrollTo({\r\n        x: offset,\r\n        y: 0,\r\n        animated: !this.props.scrollWithoutAnimation\r\n      });\r\n    }\r\n\r\n    const currentPage = this.state.currentPage;\r\n    this.updateSceneKeys({\r\n      page: pageNumber,\r\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber)\r\n    });\r\n  }\r\n\r\n  renderTabBar(props) {\r\n    if (this.props.renderTabBar === false) {\r\n      return null;\r\n    } else if (this.props.renderTabBar) {\r\n      return React.cloneElement(this.props.renderTabBar(props), props);\r\n    } else {\r\n      return <DefaultTabBar {...props} />;\r\n    }\r\n  }\r\n\r\n  updateSceneKeys({\r\n    page,\r\n    children = this.props.children,\r\n    callback = () => { }\r\n  }) {\r\n    let newKeys = this.newSceneKeys({\r\n      previousKeys: this.state.sceneKeys,\r\n      currentPage: page,\r\n      children\r\n    });\r\n    this.setState({ currentPage: page, sceneKeys: newKeys }, callback);\r\n  }\r\n\r\n  newSceneKeys({\r\n    previousKeys = [],\r\n    currentPage = 0,\r\n    children = this.props.children\r\n  }) {\r\n    let newKeys = [];\r\n    this._children(children).forEach((child, idx) => {\r\n      let key = this._makeSceneKey(child, idx);\r\n      if (\r\n        this._keyExists(previousKeys, key) ||\r\n        this._shouldRenderSceneKey(idx, currentPage)\r\n      ) {\r\n        newKeys.push(key);\r\n      }\r\n    });\r\n    return newKeys;\r\n  }\r\n\r\n  _shouldRenderSceneKey(idx, currentPageKey) {\r\n    let numOfSibling = this.props.prerenderingSiblingsNumber;\r\n    return (\r\n      idx < currentPageKey + numOfSibling + 1 &&\r\n      idx > currentPageKey - numOfSibling - 1\r\n    );\r\n  }\r\n\r\n  _keyExists(sceneKeys, key) {\r\n    return sceneKeys.find(sceneKey => key === sceneKey);\r\n  }\r\n\r\n  _makeSceneKey(child, idx) {\r\n    return child.props.heading + \"_\" + idx;\r\n  }\r\n\r\n  renderScrollableContent() {\r\n    const scenes = this._composeScenes();\r\n    return (\r\n      <ScrollView\r\n        horizontal\r\n        pagingEnabled\r\n        automaticallyAdjustContentInsets={false}\r\n        contentOffset={{\r\n          x: this.props.initialPage * this.state.containerWidth\r\n        }}\r\n        ref={scrollView => {\r\n          this.scrollView = scrollView;\r\n        }}\r\n        onScroll={e => {\r\n          const offsetX = e.nativeEvent.contentOffset.x;\r\n          this._updateScrollValue(offsetX / this.state.containerWidth);\r\n        }}\r\n        onMomentumScrollBegin={this._onMomentumScrollBeginAndEnd}\r\n        onMomentumScrollEnd={this._onMomentumScrollBeginAndEnd}\r\n        scrollEventThrottle={16}\r\n        scrollsToTop={false}\r\n        showsHorizontalScrollIndicator={false}\r\n        scrollEnabled={!this.props.locked}\r\n        directionalLockEnabled\r\n        alwaysBounceVertical={false}\r\n        keyboardDismissMode=\"on-drag\"\r\n        {...this.props.contentProps}\r\n      >\r\n        {scenes}\r\n      </ScrollView>\r\n    );\r\n  }\r\n\r\n  _composeScenes() {\r\n    return this._children().map((child, idx) => {\r\n      let key = this._makeSceneKey(child, idx);\r\n      return (\r\n        <SceneComponent\r\n          key={child.key}\r\n          shouldUpdated={this._shouldRenderSceneKey(\r\n            idx,\r\n            this.state.currentPage\r\n          )}\r\n          style={{ width: this.state.containerWidth }}\r\n        >\r\n          {this._keyExists(this.state.sceneKeys, key)\r\n            ? child\r\n            : <View heading={child.props.heading} />}\r\n        </SceneComponent>\r\n      );\r\n    });\r\n  }\r\n\r\n  _onMomentumScrollBeginAndEnd(e) {\r\n    const offsetX = e.nativeEvent.contentOffset.x;\r\n    const page = Math.round(offsetX / this.state.containerWidth);\r\n    if (this.state.currentPage !== page) {\r\n      this._updateSelectedPage(page);\r\n    }\r\n  }\r\n\r\n  _updateSelectedPage(nextPage) {\r\n    let localNextPage = nextPage;\r\n    if (typeof localNextPage === \"object\") {\r\n      localNextPage = nextPage.nativeEvent.position;\r\n    }\r\n\r\n    const currentPage = this.state.currentPage;\r\n    this.updateSceneKeys({\r\n      page: localNextPage,\r\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage)\r\n    });\r\n  }\r\n\r\n  _onChangeTab(prevPage, currentPage) {\r\n    this.props.onChangeTab({\r\n      i: currentPage,\r\n      ref: this._children()[currentPage],\r\n      from: prevPage\r\n    });\r\n  }\r\n\r\n  _updateScrollValue(value) {\r\n    this.state.scrollValue.setValue(value);\r\n    this.props.onScroll(value);\r\n  }\r\n\r\n  _handleLayout(e) {\r\n    const { width } = e.nativeEvent.layout;\r\n\r\n    if (Math.round(width) !== Math.round(this.state.containerWidth)) {\r\n      this.setState({ containerWidth: width });\r\n      this.requestAnimationFrame(() => {\r\n        this.goToPage(this.state.currentPage);\r\n      });\r\n    }\r\n  }\r\n\r\n  _children(children = this.props.children) {\r\n    return React.Children.map(children, child => child);\r\n  }\r\n\r\n  render() {\r\n    let overlayTabs =\r\n      this.props.tabBarPosition === \"overlayTop\" ||\r\n      this.props.tabBarPosition === \"overlayBottom\";\r\n    let tabBarProps = {\r\n      goToPage: this.goToPage,\r\n      tabs: this._children().map(child => child.props.heading),\r\n      tabStyle: this._children().map(child => child.props.tabStyle),\r\n      activeTabStyle: this._children().map(child => child.props.activeTabStyle),\r\n      textStyle: this._children().map(child => child.props.textStyle),\r\n      activeTextStyle: this._children().map(\r\n        child => child.props.activeTextStyle\r\n      ),\r\n      tabHeaderStyle: this._children().map(child =>\r\n        _.get(child.props.heading.props, \"style\", undefined)\r\n      ),\r\n      activeTab: this.state.currentPage,\r\n      scrollValue: this.state.scrollValue,\r\n      containerWidth: this.state.containerWidth\r\n    };\r\n\r\n    if (this.props.tabBarBackgroundColor) {\r\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\r\n    }\r\n    if (this.props.tabBarActiveTextColor) {\r\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\r\n    }\r\n    if (this.props.tabBarInactiveTextColor) {\r\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\r\n    }\r\n    if (this.props.tabBarTextStyle) {\r\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\r\n    }\r\n    if (this.props.tabBarUnderlineStyle) {\r\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\r\n    }\r\n    if (overlayTabs) {\r\n      tabBarProps.style = {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        right: 0,\r\n        [this.props.tabBarPosition === \"overlayTop\" ? \"top\" : \"bottom\"]: 0\r\n      };\r\n    }\r\n\r\n    return (\r\n      <View\r\n        style={[styles.container, this.props.style]}\r\n        onLayout={this._handleLayout}\r\n      >\r\n        {this.props.tabBarPosition === \"top\" && this.renderTabBar(tabBarProps)}\r\n        {this.renderScrollableContent()}\r\n        {(this.props.tabBarPosition === \"bottom\" || overlayTabs) &&\r\n          this.renderTabBar(tabBarProps)}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nScrollableTabView.propTypes = {\r\n  tabBarPosition: PropTypes.oneOf([\r\n    \"top\",\r\n    \"bottom\",\r\n    \"overlayTop\",\r\n    \"overlayBottom\"\r\n  ]),\r\n  initialPage: PropTypes.number,\r\n  page: PropTypes.number,\r\n  onChangeTab: PropTypes.func,\r\n  onScroll: PropTypes.func,\r\n  renderTabBar: PropTypes.any,\r\n  style: ViewPropTypes.style,\r\n  contentProps: PropTypes.object,\r\n  scrollWithoutAnimation: PropTypes.bool,\r\n  locked: PropTypes.bool,\r\n  prerenderingSiblingsNumber: PropTypes.number\r\n}\r\n\r\nexport { ScrollableTabView }\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  scrollableContentAndroid: {\r\n    flex: 1\r\n  }\r\n});\r\n"]}