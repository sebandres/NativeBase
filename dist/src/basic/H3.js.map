{"version":3,"sources":["../../../src/basic/H3.js"],"names":["H3","_root","c","props","childrenType","propName","component","error","prop","Children","forEach","child","Error","propTypes","children","style","object","StyledH3"],"mappings":"i1BAAA,4B;AACA,qC;AACA;;AAEA;AACA,mE;;AAEMA,E;AACK;AACP,MAAO,2DAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,mDAAP;AACD,C;;;AAGH,GAAMC,cAAe,QAAfA,aAAe,CAASD,KAAT,CAAgBE,QAAhB,CAA0BC,SAA1B,CAAqC;AACxD,GAAIC,aAAJ;AACA,GAAMC,MAAOL,MAAME,QAAN,CAAb;AACA,gBAAMI,QAAN,CAAeC,OAAf,CAAuBF,IAAvB,CAA6B,eAAS;AACpC,GAAI,MAAOG,MAAP,GAAiB,QAArB,CAA+B;AAC7BJ,MAAQ,GAAIK,MAAJ,CAAaN,SAAb,4BAAR;AACD;AACF,CAJD;AAKA,MAAOC,MAAP;AACD,CATD;;AAWAP,GAAGa,SAAH;AACK,kBAAKA,SADV;AAEEC,SAAUV,YAFZ;AAGEW,MAAO,oBAAUC,MAHnB;;;AAMA,GAAMC,UAAW,yCAAa,eAAb,CAA8B,EAA9B,iCAAwDjB,EAAxD,CAAjB,C;;AAEqBA,E,CAAZiB,Q","file":"H3.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types'; // ES6\r\nimport { Text } from \"react-native\";\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\r\n\r\nclass H3 extends Component {\r\n  render() {\r\n    return <Text ref={c => (this._root = c)} {...this.props} />;\r\n  }\r\n}\r\n\r\nconst childrenType = function(props, propName, component) {\r\n  let error;\r\n  const prop = props[propName];\r\n  React.Children.forEach(prop, child => {\r\n    if (typeof child !== \"string\") {\r\n      error = new Error(`${component} should have only string`);\r\n    }\r\n  });\r\n  return error;\r\n};\r\n\r\nH3.propTypes = {\r\n  ...Text.propTypes,\r\n  children: childrenType,\r\n  style: PropTypes.object\r\n};\r\n\r\nconst StyledH3 = connectStyle(\"NativeBase.H3\", {}, mapPropsToStyleNames)(H3);\r\n\r\nexport { StyledH3 as H3 };\r\n"]}