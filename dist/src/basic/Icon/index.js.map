{"version":3,"sources":["../../../../src/basic/Icon/index.js"],"names":["Icon","variables","context","theme","platformStyle","platform","iconFamily","props","name","active","ios","default","android","OS","_root","c","getIconName","getName","contextTypes","object","propTypes","style","string","bool","StyledIcon"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types'; // ES6\r\n\r\nimport { Platform } from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\n\r\nimport { IconNB } from \"../IconNB\";\r\nimport ic from \"./NBIcons.json\";\r\nimport variable from \"./../../theme/variables/platform\";\r\nimport _ from \"lodash\";\r\n\r\nimport mapPropsToStyleNames from \"../../Utils/mapPropsToStyleNames\";\r\n\r\nclass Icon extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n\r\n  getName() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n      : variable;\r\n    const platformStyle = variables.platformStyle;\r\n    const platform = variables.platform;\r\n\r\n    if (variables.iconFamily === \"Ionicons\") {\r\n      if (typeof ic[this.props.name] !== \"object\") {\r\n        return this.props.name;\r\n      } else if (typeof ic[this.props.name] === \"object\") {\r\n        let name;\r\n        if (platform === \"ios\" && platformStyle !== \"material\") {\r\n          name = this.props.active\r\n            ? ic[this.props.name].ios.active\r\n            : ic[this.props.name].ios.default;\r\n        } else {\r\n          name = this.props.active\r\n            ? ic[this.props.name].android.active\r\n            : ic[this.props.name].android.default;\r\n        }\r\n        return name;\r\n      }\r\n    } else {\r\n      return this.props.name;\r\n    }\r\n  }\r\n\r\n  getIconName() {\r\n    if (Platform.OS === \"ios\") {\r\n      if (this.props.ios) {\r\n        return this.props.ios;\r\n      } else {\r\n        return this.props.active\r\n          ? ic[this.props.name].ios.active\r\n          : ic[this.props.name].ios.default;\r\n      }\r\n    } else if (this.props.android) {\r\n      return this.props.android;\r\n    } else {\r\n      return this.props.active\r\n        ? ic[this.props.name].android.active\r\n        : ic[this.props.name].android.default;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.ios && this.props.android) {\r\n      return (\r\n        <IconNB\r\n          ref={c => (this._root = c)}\r\n          {...this.props}\r\n          name={Platform.OS === \"ios\" ? this.props.ios : this.props.android}\r\n        />\r\n      );\r\n    } else if (this.props.name && (this.props.android || this.props.ios)) {\r\n      return (\r\n        <IconNB\r\n          ref={c => (this._root = c)}\r\n          {...this.props}\r\n          name={this.getIconName()}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <IconNB\r\n          ref={c => (this._root = c)}\r\n          {...this.props}\r\n          name={this.getName()}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nIcon.propTypes = {\r\n  ...IconNB.propTypes,\r\n  style: PropTypes.object,\r\n  name: PropTypes.string,\r\n  ios: PropTypes.string,\r\n  android: PropTypes.string,\r\n  active: PropTypes.bool\r\n};\r\n\r\nconst StyledIcon = connectStyle(\"NativeBase.Icon\", {}, mapPropsToStyleNames)(\r\n  Icon\r\n);\r\n\r\nexport { StyledIcon as Icon };\r\n"]}