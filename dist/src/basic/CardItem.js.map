{"version":3,"sources":["../../../src/basic/CardItem.js"],"names":["CardItem","props","button","_root","c","children","propTypes","style","object","header","bool","cardBody","footer","StyledCardItem"],"mappings":"61BAAA,4B;AACA;AACA,qC;;AAEA;AACA,mE;;AAEMA,Q;AACK;AACP,GAAI,KAAKC,KAAL,CAAWC,MAAf,CAAuB;AACrB;AACE;AACE,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EADP;AAEM,KAAKH,KAFX;AAGE,cAAe,KAAKA,KAAL,CAAWC,MAAX,CAAoB,GAApB,CAA0B,CAH3C;;AAKG,KAAKD,KAAL,CAAWI,QALd,CADF;;;AASD,CAVD,IAUO;AACL;AACE,0DAAM,IAAK,sBAAM,QAAKF,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKH,KAA3C;AACG,KAAKA,KAAL,CAAWI,QADd,CADF;;;AAKD;AACF,C;;;AAGHL,SAASM,SAAT;AACK,8BAAiBA,SADtB;AAEEC,MAAO,oBAAUC,MAFnB;AAGEC,OAAQ,oBAAUC,IAHpB;AAIEC,SAAU,oBAAUD,IAJtB;AAKEE,OAAQ,oBAAUF,IALpB;AAMER,OAAQ,oBAAUQ,IANpB;;;AASA,GAAMG,gBAAiB;AACrB,qBADqB;AAErB,EAFqB;;AAIrBb,QAJqB,CAAvB,C;;AAM2BA,Q,CAAlBa,c","file":"CardItem.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TouchableOpacity, View } from \"react-native\";\r\nimport PropTypes from 'prop-types'; // ES6\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\r\n\r\nclass CardItem extends Component {\r\n  render() {\r\n    if (this.props.button) {\r\n      return (\r\n        <TouchableOpacity\r\n          ref={c => (this._root = c)}\r\n          {...this.props}\r\n          activeOpacity={this.props.button ? 0.2 : 1}\r\n        >\r\n          {this.props.children}\r\n        </TouchableOpacity>\r\n      );\r\n    } else {\r\n      return (\r\n        <View ref={c => (this._root = c)} {...this.props}>\r\n          {this.props.children}\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nCardItem.propTypes = {\r\n  ...TouchableOpacity.propTypes,\r\n  style: PropTypes.object,\r\n  header: PropTypes.bool,\r\n  cardBody: PropTypes.bool,\r\n  footer: PropTypes.bool,\r\n  button: PropTypes.bool\r\n};\r\n\r\nconst StyledCardItem = connectStyle(\r\n  \"NativeBase.CardItem\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(CardItem);\r\n\r\nexport { StyledCardItem as CardItem };\r\n"]}