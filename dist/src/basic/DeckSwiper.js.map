{"version":3,"sources":["../../../src/basic/DeckSwiper.js"],"names":["SWIPE_THRESHOLD","DeckSwiper","props","state","pan","ValueXY","pan2","enter","Value","selectedItem","dataSource","selectedItem2","card1Top","card2Top","fadeAnim","looping","disabled","length","lastCard","setState","undefined","visibleIndex","indexOf","currentIndex","nextIndex","topCard","position","top","right","left","newIdx","newIdx2","setTimeout","nextIndexes","findNextIndexes","onSwiping","timing","toValue","start","spring","friction","selectNext","decay","velocity","x","y","deceleration","_resetState","bind","_panResponder","create","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","evt","gestureState","Math","abs","dx","onPanResponderGrant","e","setOffset","_value","setValue","onPanResponderMove","val","opa","event","onPanResponderRelease","vx","vy","onSwipeRight","onSwipeLeft","translateX","translateY","rotate","interpolate","inputRange","outputRange","opacity","scale","animatedCardStyles","transform","animatedCardStyles2","flexDirection","renderEmpty","getCardStyles","getInitialStyle","panHandlers","renderItem","renderBottom","renderTop","propTypes","style","object","array","StyledDeckSwiper"],"mappings":"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","file":"DeckSwiper.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types'; // ES6\r\nimport { View, Animated, PanResponder, ViewPropTypes } from \"react-native\";\r\nimport clamp from \"clamp\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\r\n\r\nconst SWIPE_THRESHOLD = 120;\r\n\r\nclass DeckSwiper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pan: new Animated.ValueXY(),\r\n      pan2: new Animated.ValueXY(),\r\n      enter: new Animated.Value(0.8),\r\n      selectedItem: this.props.dataSource[0],\r\n      selectedItem2: this.props.dataSource[1],\r\n      card1Top: true,\r\n      card2Top: false,\r\n      fadeAnim: new Animated.Value(0.8),\r\n      looping: typeof this.props.looping === \"undefined\"\r\n        ? true\r\n        : this.props.looping,\r\n      disabled: this.props.dataSource.length === 0,\r\n      lastCard: this.props.dataSource.length === 1\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps({ dataSource }) {\r\n    if (dataSource.length !== this.props.dataSource.length) {\r\n      if (dataSource.length <= 1) {\r\n        this.setState({\r\n          ...this.state,\r\n          selectedItem: dataSource[0],\r\n          selectedItem2: undefined,\r\n          disabled: dataSource.length === 0,\r\n          lastCard: dataSource.length === 1\r\n        });\r\n        return;\r\n      }\r\n\r\n      const visibleIndex = dataSource.indexOf(this.state.selectedItem);\r\n      const currentIndex = visibleIndex < 0 ? visibleIndex + 1 : visibleIndex;\r\n      const nextIndex = currentIndex + 1 === dataSource.length\r\n        ? 0\r\n        : currentIndex + 1;\r\n\r\n      this.setState({\r\n        selectedItem: dataSource[currentIndex],\r\n        selectedItem2: dataSource[nextIndex]\r\n      });\r\n    }\r\n  }\r\n\r\n  getInitialStyle() {\r\n    return {\r\n      topCard: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        right: 0,\r\n        left: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  findNextIndexes(currentIndex) {\r\n    const newIdx = currentIndex + 1;\r\n    const newIdx2 = currentIndex + 2;\r\n\r\n    if (\r\n      newIdx2 > this.props.dataSource.length - 1 &&\r\n      newIdx === this.props.dataSource.length - 1\r\n    ) {\r\n      return [newIdx, 0];\r\n    } else if (newIdx > this.props.dataSource.length - 1) {\r\n      return [0, 1];\r\n    }\r\n    return [newIdx, newIdx2];\r\n  }\r\n\r\n  selectNext() {\r\n    const dataSource = this.props.dataSource;\r\n    const currentIndex = dataSource.indexOf(this.state.selectedItem);\r\n\r\n    // if not looping, check for these conditionals and if true return from selectNext()\r\n    if (!this.state.looping) {\r\n      // reached end -> only display static renderEmpty() -> no swiping\r\n      if (currentIndex === dataSource.length - 1) {\r\n        return this.setState({\r\n          disabled: true\r\n        });\r\n      } else if (currentIndex === dataSource.length - 2) {\r\n        // show last card with renderEmpty() component behind it\r\n        return setTimeout(() => {\r\n          this.setState({\r\n            selectedItem: dataSource[currentIndex + 1]\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              lastCard: true\r\n            });\r\n          }, 350);\r\n        }, 50);\r\n      }\r\n    }\r\n\r\n    const nextIndexes = this.findNextIndexes(currentIndex);\r\n    setTimeout(() => {\r\n      this.setState({\r\n        selectedItem: this.props.dataSource[nextIndexes[0]]\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          selectedItem2: this.props.dataSource[nextIndexes[1]]\r\n        });\r\n      }, 350);\r\n    }, 50);\r\n  }\r\n\r\n  swipeRight() {\r\n    if (this.props.onSwiping) this.props.onSwiping(\"right\");\r\n    setTimeout(() => {\r\n      Animated.timing(this.state.fadeAnim, { toValue: 1 }).start();\r\n      Animated.spring(this.state.enter, { toValue: 1, friction: 7 }).start();\r\n      this.selectNext();\r\n      Animated.decay(this.state.pan, {\r\n        velocity: { x: 8, y: 1 },\r\n        deceleration: 0.98\r\n      }).start(this._resetState.bind(this));\r\n    }, 300);\r\n  }\r\n\r\n  swipeLeft() {\r\n    if (this.props.onSwiping) this.props.onSwiping(\"left\");\r\n    setTimeout(() => {\r\n      Animated.timing(this.state.fadeAnim, { toValue: 1 }).start();\r\n      Animated.spring(this.state.enter, { toValue: 1, friction: 7 }).start();\r\n      this.selectNext();\r\n      Animated.decay(this.state.pan, {\r\n        velocity: { x: -8, y: 1 },\r\n        deceleration: 0.98\r\n      }).start(this._resetState.bind(this));\r\n    }, 300);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this._panResponder = PanResponder.create({\r\n      onMoveShouldSetResponderCapture: () => true,\r\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) =>\r\n        Math.abs(gestureState.dx) > 5,\r\n\r\n      onPanResponderGrant: (e, gestureState) => {\r\n        this.state.pan.setOffset({\r\n          x: this.state.pan.x._value,\r\n          y: this.state.pan.y._value\r\n        });\r\n        this.state.pan.setValue({ x: 0, y: 0 });\r\n      },\r\n\r\n      onPanResponderMove: (e, gestureState) => {\r\n        if (gestureState.dx > 20) {\r\n          if (this.props.onSwiping)\r\n            this.props.onSwiping(\"right\", gestureState.dx);\r\n        } else if (gestureState.dx < -20) {\r\n          if (this.props.onSwiping)\r\n            this.props.onSwiping(\"left\", gestureState.dx);\r\n        }\r\n        let val = Math.abs(gestureState.dx * 0.0013);\r\n        const opa = Math.abs(gestureState.dx * 0.0022);\r\n        if (val > 0.2) {\r\n          val = 0.2;\r\n        }\r\n        Animated.timing(this.state.fadeAnim, { toValue: 0.8 + val }).start();\r\n        Animated.spring(this.state.enter, {\r\n          toValue: 0.8 + val,\r\n          friction: 7\r\n        }).start();\r\n        Animated.event([null, { dx: this.state.pan.x }])(e, gestureState);\r\n      },\r\n\r\n      onPanResponderRelease: (e, { vx, vy }) => {\r\n        if (this.props.onSwiping) this.props.onSwiping(null);\r\n        let velocity;\r\n\r\n        if (vx >= 0) {\r\n          velocity = clamp(vx, 4.5, 10);\r\n        } else if (vx < 0) {\r\n          velocity = clamp(vx * -1, 4.5, 10) * -1;\r\n        }\r\n\r\n        if (Math.abs(this.state.pan.x._value) > SWIPE_THRESHOLD) {\r\n          if (velocity > 0) {\r\n            this.props.onSwipeRight\r\n              ? this.props.onSwipeRight(this.state.selectedItem)\r\n              : undefined;\r\n            this.selectNext();\r\n          } else {\r\n            this.props.onSwipeLeft\r\n              ? this.props.onSwipeLeft(this.state.selectedItem)\r\n              : undefined;\r\n            this.selectNext();\r\n          }\r\n\r\n          Animated.decay(this.state.pan, {\r\n            velocity: { x: velocity, y: vy },\r\n            deceleration: 0.98\r\n          }).start(this._resetState.bind(this));\r\n        } else {\r\n          Animated.spring(this.state.pan, {\r\n            toValue: { x: 0, y: 0 },\r\n            friction: 4\r\n          }).start();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _resetState() {\r\n    this.state.pan.setValue({ x: 0, y: 0 });\r\n    this.state.enter.setValue(0.8);\r\n    this.state.fadeAnim.setValue(0.8);\r\n    this.setState({\r\n      card1Top: !this.state.card1Top,\r\n      card2Top: !this.state.card2Top\r\n    });\r\n    if (this.props.onSwiping) this.props.onSwiping(null);\r\n  }\r\n\r\n  getCardStyles() {\r\n    const { pan, pan2, enter } = this.state;\r\n\r\n    const [translateX, translateY] = [pan.x, pan.y];\r\n    // let [translateX, translateY] = [pan2.x, pan2.y];\r\n\r\n    const rotate = pan.x.interpolate({\r\n      inputRange: [-700, 0, 700],\r\n      outputRange: [\"-10deg\", \"0deg\", \"10deg\"]\r\n    });\r\n\r\n    const opacity = pan.x.interpolate({\r\n      inputRange: [-320, 0, 320],\r\n      outputRange: [0.9, 1, 0.9]\r\n    });\r\n    const scale = enter;\r\n\r\n    const animatedCardStyles = {\r\n      transform: [{ translateX }, { translateY }, { rotate }],\r\n      opacity\r\n    };\r\n    const animatedCardStyles2 = { transform: [{ scale }] };\r\n\r\n    return [animatedCardStyles, animatedCardStyles2];\r\n  }\r\n\r\n  render() {\r\n    if (this.state.disabled) {\r\n      // disable swiping and renderEmpty\r\n      return (\r\n        <View style={{ position: \"relative\", flexDirection: \"column\" }}>\r\n          {\r\n            <View>\r\n              {this.props.renderEmpty && this.props.renderEmpty()}\r\n            </View>\r\n          }\r\n        </View>\r\n      );\r\n    } else if (this.state.lastCard) {\r\n      // display renderEmpty underneath last viable card\r\n      return (\r\n        <View style={{ position: \"relative\", flexDirection: \"column\" }}>\r\n          {this.state.selectedItem === undefined\r\n            ? <View />\r\n            : <View>\r\n                <Animated.View\r\n                  style={[\r\n                    this.getCardStyles()[1],\r\n                    this.getInitialStyle().topCard,\r\n                    { opacity: this.state.fadeAnim }\r\n                  ]}\r\n                  {...this._panResponder.panHandlers}\r\n                >\r\n                  {this.props.renderEmpty && this.props.renderEmpty()}\r\n                </Animated.View>\r\n                <Animated.View\r\n                  style={[\r\n                    this.getCardStyles()[0],\r\n                    this.getInitialStyle().topCard\r\n                  ]}\r\n                  {...this._panResponder.panHandlers}\r\n                >\r\n                  {this.props.renderItem(this.state.selectedItem)}\r\n                </Animated.View>\r\n              </View>}\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={{ position: \"relative\", flexDirection: \"column\" }}>\r\n        {this.state.selectedItem === undefined\r\n          ? <View />\r\n          : <View>\r\n              <Animated.View\r\n                style={[\r\n                  this.getCardStyles()[1],\r\n                  this.getInitialStyle().topCard,\r\n                  { opacity: this.state.fadeAnim }\r\n                ]}\r\n                {...this._panResponder.panHandlers}\r\n              >\r\n                {this.props.renderBottom\r\n                  ? this.props.renderBottom(this.state.selectedItem2)\r\n                  : this.props.renderItem(this.state.selectedItem2)}\r\n              </Animated.View>\r\n              <Animated.View\r\n                style={[\r\n                  this.getCardStyles()[0],\r\n                  this.getInitialStyle().topCard\r\n                ]}\r\n                {...this._panResponder.panHandlers}\r\n              >\r\n                {this.props.renderTop\r\n                  ? this.props.renderTop(this.state.selectedItem)\r\n                  : this.props.renderItem(this.state.selectedItem)}\r\n              </Animated.View>\r\n            </View>}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nDeckSwiper.propTypes = {\r\n  ...ViewPropTypes,\r\n  style: PropTypes.object,\r\n  dataSource: PropTypes.array\r\n};\r\n\r\nconst StyledDeckSwiper = connectStyle(\r\n  \"NativeBase.DeckSwiper\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(DeckSwiper);\r\n\r\nexport { StyledDeckSwiper as DeckSwiper };\r\n"]}