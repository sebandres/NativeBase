{"version":3,"sources":["../../../src/basic/Spinner.js"],"names":["Spinner","variables","context","theme","_root","c","props","color","inverse","inverseSpinnerColor","defaultSpinnerColor","size","contextTypes","object","propTypes","string","bool","StyledSpinner"],"mappings":"21BAAA,4B;AACA,qC;AACA;;AAEA;AACA,qD;AACA,mE;;AAEMA,O;;;;AAIK;AACP,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb;AACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADnC,mBAAlB;;AAGA;AACE;AACE,IAAK,sBAAM,QAAKG,KAAL,CAAaC,CAAnB,EADP;AAEM,KAAKC,KAFX;AAGE;AACE,KAAKA,KAAL,CAAWC,KAAX;AACI,KAAKD,KAAL,CAAWC,KADf;AAEI,KAAKD,KAAL,CAAWE,OAAX;AACEP,UAAUQ,mBADZ;AAEER,UAAUS,mBARpB;;AAUE,KAAM,KAAKJ,KAAL,CAAWK,IAAX,CAAkB,KAAKL,KAAL,CAAWK,IAA7B,CAAoC,OAV5C,kDADF;;;AAcD,C,uCAtBGX,O,CACGY,Y,CAAe,CACpBT,MAAO,oBAAUU,MADG,C;;;AAwBxBb,QAAQc,SAAR;AACK,+BAAkBA,SADvB;AAEEP,MAAO,oBAAUQ,MAFnB;AAGEP,QAAS,oBAAUQ,IAHrB;;;AAMA,GAAMC,eAAgB;AACpB,oBADoB;AAEpB,EAFoB;;AAIpBjB,OAJoB,CAAtB,C;;AAM0BA,O,CAAjBiB,a","file":"Spinner.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types'; // ES6\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport variable from \"../theme/variables/platform\";\r\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\r\n\r\nclass Spinner extends Component {\r\n  static contextTypes = {\r\n    theme: PropTypes.object\r\n  };\r\n  render() {\r\n    const variables = this.context.theme\r\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\r\n      : variable;\r\n    return (\r\n      <ActivityIndicator\r\n        ref={c => (this._root = c)}\r\n        {...this.props}\r\n        color={\r\n          this.props.color\r\n            ? this.props.color\r\n            : this.props.inverse\r\n              ? variables.inverseSpinnerColor\r\n              : variables.defaultSpinnerColor\r\n        }\r\n        size={this.props.size ? this.props.size : \"large\"}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSpinner.propTypes = {\r\n  ...ActivityIndicator.propTypes,\r\n  color: PropTypes.string,\r\n  inverse: PropTypes.bool\r\n};\r\n\r\nconst StyledSpinner = connectStyle(\r\n  \"NativeBase.Spinner\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(Spinner);\r\n\r\nexport { StyledSpinner as Spinner };\r\n"]}